spring:
  datasource:
    url: ${MYSQL_URL}
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}

  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
        ddl-auto: none



  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.xml

  profiles:
    active: @activatedProperties@


  servlet:
    multipart:
      max-file-size: 300MB
      max-request-size: 300MB
      enabled: true

  security:
    oauth2:
      client:
        registration:
          facebook:
            clientId: ${ROACADEMY_FACEBOOK_CLIENT_ID}
            clientSecret: ${ROACADEMY_FACEBOOK_CLIENT_SECRET}
            redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - public_profile
          google:
            clientId: ${ROACADEMY_GOOGLE_CLIENT_ID}
            clientSecret: ${ROACADEMY_GOOGLE_CLIENT_SECRET}
            redirectUriTemplate: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
        provider:
          facebook:
            authorizationUri: https://www.facebook.com/v7.0/dialog/oauth
            tokenUri: https://graph.facebook.com/v7.0/oauth/access_token
            userInfoUri: https://graph.facebook.com/v7.0/me?fields=id,first_name,middle_name,last_name,name,email,picture.width(250).height(250)



logging:
  level:
    org:
      hibernate:
        SQL: DEBUG


#file.upload-dir=/var/www/roacademy_files
file:
  upload-dir: ${ROACADEMY_UPLOAD_DIR}


app:
  auth:
    jwtSecret: ${ROACADEMY_JWT_SECRET}
    jwtExpirationInMs: 604800000

  oauth2:
    box:
      clientId: ${ROACADEMY_BOX_CLIENT_ID}
      clientSecret: ${ROACADEMY_BOX_CLIENT_SECRET}
      authorizationUri: "https://account.box.com/api/oauth2/authorize"
      tokenUri: "https://api.box.com/oauth2/token"

    youtube:
      clientId: ${ROACADEMY_GOOGLE_CLIENT_ID}
      clientSecret: ${ROACADEMY_GOOGLE_CLIENT_SECRET}
      authorizationUri: "https://accounts.google.com/o/oauth2/v2/auth"
      tokenUri: "https://oauth2.googleapis.com/token"
      redirectUri: "http://localhost:8080/api/oauth2/callback/youtube"
      scopes:
        - https://www.googleapis.com/auth/youtube
    imgur:
      clientId: ${ROACADEMY_IMGUR_CLIENT_ID}
      clientSecret: ${ROACADEMY_IMGUR_CLIENT_SECRET}
      authorizationUri: "https://api.imgur.com/oauth2/authorize"
      tokenUri: "https://api.imgur.com/oauth2/token"

    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect

server:
  port: 8080